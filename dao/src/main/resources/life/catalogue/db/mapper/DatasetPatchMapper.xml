<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.DatasetPatchMapper">

  <sql id="SELECT">
    d.key,
    d.doi,
    d.identifier,
    d.title,
    d.alias,
    d.description,
    d.issued,
    d.version,
    d.issn,
    d.contact,
    d.creator,
    d.editor,
    d.publisher,
    d.contributor,
    d.keyword,
    d.geographic_scope,
    d.taxonomic_scope,
    d.temporal_scope,
    d.confidence,
    d.completeness,
    d.license,
    d.url,
    d.logo,
    d.url_formatter,
    d.conversion_description,
    d.conversion_url,
    d.notes,
    d.created,
    d.created_by,
    d.modified,
    d.modified_by
  </sql>

  <sql id="COLS">
    doi,
    identifier,
    title,
    alias,
    description,
    issued,
    version,
    issn,
    contact,
    creator,
    editor,
    publisher,
    contributor,
    keyword,
    geographic_scope,
    taxonomic_scope,
    temporal_scope,
    confidence,
    completeness,
    license,
    url,
    logo,
    url_formatter,
    conversion_description,
    conversion_url,
    notes,
    created_by,
    modified_by
  </sql>

  <!--
  WARNING! Any changes in the PROPS list below must also be applied in DatasetArchiveMapper.xml PROPS sql fragment!
  -->
  <sql id="PROPS">
    #{obj.doi, typeHandler=life.catalogue.db.type.DoiTypeHandler},
    #{obj.identifier, typeHandler=life.catalogue.db.type2.HstoreMapTypeHandler}::hstore,
    #{obj.title},
    #{obj.alias},
    #{obj.description},
    #{obj.issued},
    #{obj.version},
    #{obj.issn},
    #{obj.contact, typeHandler=life.catalogue.db.type.AgentTypeHandler},
    #{obj.creator, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler},
    #{obj.editor, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler},
    #{obj.publisher, typeHandler=life.catalogue.db.type.AgentTypeHandler},
    #{obj.contributor, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler},
    #{obj.keyword, typeHandler=life.catalogue.db.type.StringArrayTypeHandler},
    #{obj.geographicScope},
    #{obj.taxonomicScope},
    #{obj.temporalScope},
    #{obj.confidence},
    #{obj.completeness},
    #{obj.license}::LICENSE,
    #{obj.url},
    #{obj.logo},
    #{obj.urlFormatter, typeHandler=life.catalogue.db.type2.HstoreMapTypeHandler}::hstore,
    #{obj.conversion.description},
    #{obj.conversion.url},
    #{obj.notes},
    #{obj.createdBy},
    #{obj.modifiedBy}
  </sql>

  <select id="processDataset" parameterType="map" resultMap="life.catalogue.db.mapper.DatasetMapper.datasetResultMap" resultOrdered="true" fetchSize="100" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM dataset_patch d
    WHERE dataset_key = #{datasetKey}
  </select>

  <select id="get" resultMap="life.catalogue.db.mapper.DatasetMapper.datasetResultMap">
    SELECT <include refid="SELECT"/>
    FROM dataset_patch d
    WHERE key = #{key} and dataset_key = #{datasetKey}
  </select>

  <insert id="create" parameterType="Dataset" useGeneratedKeys="false">
    INSERT INTO dataset_patch ( key, dataset_key,<include refid="COLS"/>, created, modified)
    VALUES ( #{obj.key}, #{datasetKey},<include refid="PROPS"/>, now(), now())
  </insert>

  <update id="update" parameterType="Dataset">
    UPDATE dataset_patch
    SET (<include refid="COLS"/>, modified)
    = (<include refid="PROPS"/>, now())
    WHERE key = #{obj.key} and dataset_key = #{datasetKey}
  </update>

  <delete id="delete" parameterType="map">
    DELETE FROM dataset_patch
    WHERE key = #{key} and dataset_key = #{datasetKey}
  </delete>

  <delete id="deleteByDataset" parameterType="map">
    DELETE FROM dataset_patch WHERE dataset_key = #{datasetKey}
  </delete>


  <select id="listAgents" resultMap="life.catalogue.db.mapper.DatasetMapper.datasetResultMap">
  SELECT key, contact, creator, editor, publisher, contributor FROM dataset_patch
  </select>

  <update id="updateAgents" parameterType="Dataset">
    UPDATE dataset_patch SET (
    contact,
    creator,
    editor,
    publisher,
    contributor
    ) = (
    #{contact, typeHandler=life.catalogue.db.type.AgentTypeHandler},
    #{creator, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler},
    #{editor, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler},
    #{publisher, typeHandler=life.catalogue.db.type.AgentTypeHandler},
    #{contributor, typeHandler=life.catalogue.db.type.AgentArrayTypeHandler}
    )
    WHERE key = #{key}
  </update>
</mapper>
