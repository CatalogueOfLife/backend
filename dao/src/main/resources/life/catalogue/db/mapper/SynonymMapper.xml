<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.SynonymMapper">

  <sql id="synCols">
    <include refid="life.catalogue.db.mapper.NameUsageMapper.usageCols"/>
  </sql>

  <sql id="COLS">
    <include refid="life.catalogue.db.mapper.NameUsageMapper.COLS"/>
  </sql>

  <sql id="PROPS">
    <include refid="life.catalogue.db.mapper.NameUsageMapper.PROPS"/>
  </sql>

  <sql id="SELECT">
    <include refid="SELECT_NO_ACCEPTED"/>,
    <include refid="life.catalogue.db.mapper.TaxonMapper.taxonCols">
      <property name="alias" value="a"/>
      <property name="prefix" value="a_"/>
    </include>,
    ar.citation AS a_according_to,
    <include refid="life.catalogue.db.mapper.NameMapper.nameColsNidx">
      <property name="alias" value="an"/>
      <property name="aliasNI" value="anm"/>
      <property name="prefix" value="a_n_"/>
    </include>
  </sql>

  <sql id="SELECT_NO_ACCEPTED">
    <include refid="life.catalogue.db.mapper.SynonymMapper.synCols">
      <property name="alias" value="u"/>
      <property name="prefix" value=""/>
    </include>,
    r.citation AS according_to,
    <include refid="life.catalogue.db.mapper.NameMapper.nameColsNidx">
      <property name="alias" value="n"/>
      <property name="aliasNI" value="nm"/>
      <property name="prefix" value="n_"/>
    </include>
  </sql>

  <sql id="FROM">
    <include refid="life.catalogue.db.mapper.NameUsageMapper.FROM"/>
  </sql>
  <sql id="FROM_NO_ACCEPTED">
    <include refid="life.catalogue.db.mapper.NameUsageMapper.FROM_NO_ACCEPTED"/>
  </sql>


  <resultMap id="synonymResultMap" type="Synonym" autoMapping="true">
    <id property="id" column="id"/>
    <id property="datasetKey" column="dataset_key"/>
    <result property="identifier" column="identifier" typeHandler="life.catalogue.db.type2.IdentifierArrayTypeHandler"/>
    <association property="name" javaType="Name" resultMap="life.catalogue.db.mapper.NameMapper.nameResultMap" columnPrefix="n_"/>
    <association property="accepted" javaType="Taxon" resultMap="life.catalogue.db.mapper.TaxonMapper.taxonResultMap" columnPrefix="a_"/>
  </resultMap>


  <select id="listByTaxon" resultMap="synonymResultMap">
    SELECT <include refid="SELECT_NO_ACCEPTED"/>
    FROM <include refid="FROM_NO_ACCEPTED"/>
    WHERE u.dataset_key=#{key.datasetKey} AND u.parent_id = #{key.id} AND is_synonym(u.status)
    ORDER BY u.status, n.scientific_name
  </select>

  <select id="listByNameID" resultMap="synonymResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE u.dataset_key=#{datasetKey} AND is_synonym(u.status) AND u.name_id = #{nameId}
  </select>

  <select id="count" resultType="integer">
    SELECT count(*) FROM name_usage
    WHERE dataset_key=#{datasetKey} AND is_synonym(status)
  </select>

  <select id="list" resultMap="synonymResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE u.dataset_key=#{datasetKey} AND is_synonym(u.status)
    ORDER BY id
    <include refid="life.catalogue.db.Common.limit"/>
  </select>

  <select id="get" resultMap="synonymResultMap" flushCache="true">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE u.dataset_key=#{key.datasetKey} AND u.id = #{key.id} AND is_synonym(u.status)
  </select>

  <select id="processDataset" parameterType="map" resultMap="synonymResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE u.dataset_key=#{datasetKey} AND is_synonym(u.status)
  </select>

  <insert id="create" parameterType="Synonym" useGeneratedKeys="false" keyProperty="id">
    INSERT INTO name_usage (id,<include refid="COLS"/>, created, modified)
    VALUES (#{id},<include refid="PROPS"/>, now(), now())
  </insert>

  <update id="update" parameterType="Synonym" keyProperty="id">
    UPDATE name_usage
    SET (<include refid="COLS"/>, created, modified) = (<include refid="PROPS"/>, now(), now())
    WHERE dataset_key=#{datasetKey} AND id = #{id} AND is_synonym(status)
  </update>

  <!-- the taxon ID for synonyms is the accepted parent -->
  <update id="updateTaxonID" parameterType="map">
    UPDATE name_usage
    SET parent_id=#{newTaxonID}, modified_by=#{userKey}, modified=now()
    WHERE dataset_key=#{key.datasetKey} AND parent_id = #{key.id} AND is_synonym(status)
  </update>

  <delete id="delete" parameterType="map">
    DELETE FROM name_usage
    WHERE dataset_key=#{key.datasetKey} AND id = #{key.id} AND is_synonym(status)
  </delete>

  <delete id="deleteByDataset" parameterType="map">
    DELETE FROM name_usage
    WHERE dataset_key=#{datasetKey} AND is_synonym(status)
  </delete>

  <delete id="deleteByTaxon" parameterType="map">
    DELETE FROM name_usage
    WHERE dataset_key=#{key.datasetKey} AND parent_id = #{key.id} AND is_synonym(status)
  </delete>

</mapper>
