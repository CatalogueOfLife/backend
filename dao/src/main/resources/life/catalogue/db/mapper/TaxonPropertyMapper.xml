<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.TaxonPropertyMapper">

  <sql id="SELECT">
    p.id,
    p.taxon_id,
    p.dataset_key,
    p.sector_key,
    p.verbatim_key,
    p.property,
    p.value,
    p.reference_id,
    p.page,
    p.ordinal,
    p.remarks,
    p.created,
    p.created_by,
    p.modified,
    p.modified_by
  </sql>

  <sql id="COLS">
    dataset_key,
    sector_key,
    taxon_id,
    <include refid="COLS_COPY"/>
  </sql>

  <sql id="COLS_COPY">
    verbatim_key,
    property,
    value,
    reference_id,
    page,
    ordinal,
    remarks,
    created_by,
    modified_by
  </sql>

  <sql id="PROPS">
    #{obj.datasetKey},
    #{obj.sectorKey},
    #{taxonId},
    #{obj.verbatimKey},
    #{obj.property},
    #{obj.value},
    #{obj.referenceId},
    #{obj.page},
    #{obj.ordinal},
    #{obj.remarks},
    #{obj.createdBy},
    #{obj.modifiedBy}
  </sql>

  <sql id="FROM">taxon_property p</sql>

  <resultMap id="taxPropResultMap" type="TaxonProperty" autoMapping="true">
    <id property="id" column="id"/>
  </resultMap>

  <resultMap id="taxPropExtResultMap" type="TaxonExtension" autoMapping="true">
    <id column="id"/>
    <result property="taxonID" column="taxon_id"/>
    <association property="obj" autoMapping="true" javaType="TaxonProperty">
      <id property="id" column="id"/>
    </association>
  </resultMap>

  <select id="listByTaxon" resultMap="taxPropResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE p.dataset_key=#{key.datasetKey} AND p.taxon_id = #{key.id}
    ORDER BY p.id
  </select>

  <select id="get" resultMap="taxPropResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE p.dataset_key=#{key.datasetKey} AND p.id = #{key.id}
  </select>

  <select id="processDataset" parameterType="map" resultMap="taxPropExtResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE p.dataset_key=#{datasetKey}
  </select>

  <insert id="create" parameterType="TaxonProperty" useGeneratedKeys="true" keyProperty="obj.id">
    INSERT INTO taxon_property (<include refid="COLS"/>, created, modified, id)
    VALUES (<include refid="PROPS"/>, now(), now(), nextval('taxon_property_${obj.datasetKey}_id_seq'))
  </insert>

  <delete id="deleteByTaxon" parameterType="map">
    DELETE FROM taxon_property
    WHERE dataset_key = #{key.datasetKey} AND taxon_id = #{key.id}
  </delete>

  <delete id="deleteByTemp" parameterType="map">
    DELETE FROM taxon_property
    USING _tmp_nu tmp
    WHERE dataset_key=#{datasetKey} AND taxon_id = tmp.uid
  </delete>

  <insert id="copyDataset" parameterType="map">
    INSERT INTO taxon_property (dataset_key, taxon_id, id, <include refid="COLS_COPY"/>, created, modified)
    SELECT #{newDatasetKey},coalesce(<if test="mapIds">m.id2,</if>taxon_id),nextval('taxon_property_${newDatasetKey}_id_seq'),<include refid="COLS_COPY"/>, created, modified
    FROM taxon_property tp
    <if test="mapIds">
      LEFT JOIN idmap_name_usage_${datasetKey} m ON m.id=tp.taxon_id
    </if>
    WHERE dataset_key = #{datasetKey}
  </insert>

  <select id="processSector" parameterType="map" resultMap="taxPropResultMap" resultOrdered="true" fetchSize="1000" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE p.dataset_key=#{key.datasetKey} AND p.sector_key = #{key.id}
  </select>

  <delete id="deleteBySector" parameterType="map">
    DELETE FROM taxon_property
    WHERE sector_key=#{key.id} AND dataset_key=#{key.datasetKey}
  </delete>

  <update id="removeSectorKey" parameterType="map">
    UPDATE taxon_property SET sector_key = NULL
    WHERE dataset_key=#{key.datasetKey} AND sector_key = #{key.id}
  </update>

  <update id="updateTaxonID" parameterType="map">
    UPDATE verbatim_source SET taxon_id=#{newTaxonID}, modified_by=#{userKey}, modified=now()
    WHERE dataset_key=#{key.datasetKey} AND taxon_id=#{key.id}
  </update>

</mapper>
