<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.TypeMaterialMapper">

  <sql id="SELECT">
    m.id,
    m.dataset_key,
    m.sector_key,
    m.verbatim_key,
    m.verbatim_source_key,
    m.name_id,
    m.citation,
    m.status,
    m.locality,
    m.country,
    m.latitude,
    m.longitude,
    m.altitude,
    m.coordinate,
    m.sex,
    m.institution_code,
    m.catalog_number,
    m.associated_sequences,
    m.host,
    m.date,
    m.collector,
    m.reference_id,
    m.link,
    m.remarks,
    m.created,
    m.created_by,
    m.modified,
    m.modified_by
  </sql>

  <sql id="COLS">
    dataset_key,
    name_id,
    <include refid="COLS_COPY">
      <property name="alias" value=""/>
    </include>
  </sql>

  <sql id="COLS_COPY">
    ${alias}id,
    ${alias}sector_key,
    ${alias}verbatim_key,
    ${alias}verbatim_source_key,
    ${alias}citation,
    ${alias}status,
    ${alias}locality,
    ${alias}country,
    ${alias}latitude,
    ${alias}longitude,
    ${alias}altitude,
    ${alias}coordinate,
    ${alias}sex,
    ${alias}institution_code,
    ${alias}catalog_number,
    ${alias}associated_sequences,
    ${alias}host,
    ${alias}date,
    ${alias}collector,
    ${alias}reference_id,
    ${alias}link,
    ${alias}remarks,
    ${alias}created_by,
    ${alias}modified_by
  </sql>

  <sql id="PROPS">
    #{datasetKey},
    #{nameId},
    #{id},
    #{sectorKey},
    #{verbatimKey},
    #{verbatimSourceKey},
    #{citation},
    #{status}::TYPESTATUS,
    #{locality},
    #{country},
    #{latitude},
    #{longitude},
    #{altitude},
    #{coordinate, typeHandler=life.catalogue.db.type.PointTypeHandler},
    #{sex}::SEX,
    #{institutionCode},
    #{catalogNumber},
    #{associatedSequences},
    #{host},
    #{date},
    #{collector},
    #{referenceId},
    #{link},
    #{remarks},
    #{createdBy},
    #{modifiedBy}
  </sql>

  <sql id="FROM">type_material m</sql>

  <resultMap id="typeResultMap" type="TypeMaterial" autoMapping="true">
    <id property="id" column="id"/>
    <result property="coordinate" column="coordinate" typeHandler="life.catalogue.db.type.PointTypeHandler"/>
  </resultMap>

  <select id="listByName" resultMap="typeResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE m.dataset_key = #{key.datasetKey} AND m.name_id = #{key.id}
    ORDER BY m.id
  </select>

  <delete id="deleteByName" parameterType="map">
    DELETE FROM type_material
    WHERE dataset_key = #{key.datasetKey} AND name_id = #{key.id}
  </delete>

  <delete id="deleteByTemp" parameterType="map">
    DELETE FROM type_material
    USING _tmp_nu tmp
    WHERE dataset_key=#{datasetKey} AND name_id = tmp.nid
  </delete>

  <select id="get" resultMap="typeResultMap">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE m.dataset_key = #{key.datasetKey} AND m.id = #{key.id}
  </select>

  <insert id="create" parameterType="TypeMaterial" keyProperty="id">
    INSERT INTO type_material (<include refid="COLS"/>, created, modified)
    VALUES (<include refid="PROPS"/>, now(), now())
  </insert>

  <insert id="copyDataset" parameterType="map">
    INSERT INTO type_material (dataset_key, sector_key, name_id, <include refid="COLS_COPY"><property name="alias" value=""/></include>, created, modified)
    SELECT #{newDatasetKey}, t.sector_key, coalesce(<if test="mapIds">m.id2,</if>name_id), <include refid="COLS_COPY"><property name="alias" value="t."/></include>, t.created, t.modified
    FROM type_material t
    <if test="mapIds">
      LEFT JOIN idmap_name_${datasetKey} m ON m.id=t.name_id
    </if>
    WHERE t.dataset_key=#{datasetKey}
  </insert>

  <update id="update" parameterType="TypeMaterial" keyProperty="id">
    UPDATE type_material
    SET (<include refid="COLS"/>, created, modified) = (<include refid="PROPS"/>, now(), now())
    WHERE dataset_key=#{datasetKey} AND id = #{id}
  </update>

  <delete id="delete" parameterType="map">
    DELETE FROM type_material
    WHERE dataset_key = #{key.datasetKey} AND id = #{key.id}
  </delete>

  <select id="processDataset" parameterType="map" resultMap="typeResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE m.dataset_key = #{datasetKey}
  </select>

  <select id="processSector" parameterType="map" resultMap="typeResultMap" resultOrdered="true" fetchSize="1000" resultSetType="FORWARD_ONLY">
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE m.dataset_key = #{key.datasetKey} AND m.sector_key = #{key.id}
  </select>

  <select id="entityExists" parameterType="map" resultType="boolean">
    SELECT EXISTS (
      SELECT TRUE FROM type_material WHERE dataset_key=#{datasetKey}
    )
  </select>

  <delete id="deleteBySector" parameterType="map">
    DELETE FROM type_material
    WHERE dataset_key = #{key.datasetKey} AND sector_key=#{key.id}
  </delete>

  <update id="removeSectorKey" parameterType="map">
    UPDATE type_material SET sector_key = NULL, verbatim_source_key = NULL
    WHERE dataset_key = #{key.datasetKey} AND sector_key = #{key.id}
  </update>

  <delete id="deleteOrphans" parameterType="map">
    DELETE FROM type_material t
    WHERE NOT EXISTS (SELECT NULL FROM name n WHERE n.dataset_key=t.dataset_key AND t.name_id = n.id)
    <if test="before!=null">
      AND t.modified &lt; #{before}
    </if>
    AND t.dataset_key=#{datasetKey}
  </delete>

  <delete id="deleteByDataset" parameterType="map">
    DELETE FROM type_material
    WHERE dataset_key=#{datasetKey}
  </delete>
</mapper>
