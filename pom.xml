<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.catalogueoflife</groupId>
  <artifactId>motherpom</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>CLB motherpom</name>
  <url>https://github.org/Sp2000/${project.artifactId}</url>

  <scm>
    <connection>scm:git:git@github.com:CatalogueOfLife/backend.git</connection>
    <url>https://github.com/CatalogueOfLife/backend</url>
    <developerConnection>scm:git:git@github.com:CatalogueOfLife/backend.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <!-- build settings -->
    <minimumMavenVersion>3.8.5</minimumMavenVersion>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Library dependencies Check for available updates: mvn versions:display-dependency-updates We make
        use of the Dropwizard BOM (Bill of materials) to manage versions for the major libraries which also imports
        the BOM for jersey and jackson. Before adding a specific version here make sure it is not already covered
        by these BOMs (use the right versions):

        Main two Dropwizard BOMs:
        https://github.com/dropwizard/dropwizard/blob/v4.0.8/dropwizard-bom/pom.xml
        https://github.com/dropwizard/dropwizard/blob/v4.0.8/dropwizard-dependencies/pom.xml

        Which also imports the
        Jersey BOM: https://github.com/eclipse-ee4j/jersey/blob/3.0.15/bom/pom.xml
        Jackson BOM: https://github.com/FasterXML/jackson-bom/blob/jackson-bom-2.17.2/pom.xml
        Jetty BOM: https://github.com/jetty/jetty.project/blob/jetty-11.0.23/jetty-bom/pom.xml

        These BOMs manage dependency versions for many things including:
        commons-lang3, caffeine, guava, jersey, commons-text, servlet api, httpclient,
        liquibase, freemarker, jetty, jackson, metrics, etc.
    -->
    <dropwizard.version>4.0.8</dropwizard.version>

    <antlr.version>4.7.2</antlr.version>
    <assertj.version>3.11.1</assertj.version>
    <batik.version>1.18</batik.version>
    <citeproc.version>3.0.0-alpha.6</citeproc.version>
    <citeproc-styles.version>2.0.0</citeproc-styles.version>
    <commons-collections4.version>4.3</commons-collections4.version>
    <commons-compress.version>1.27.1</commons-compress.version>
    <commons-io.version>2.17.0</commons-io.version>
    <commons-lang3.version>3.17.0</commons-lang3.version><!-- 3.16 coming in through DW4.0.8 resulted in stuck tests in jenkins -->
    <chronicle.version>2.26ea47</chronicle.version>
    <docker-client.version>3.4.0</docker-client.version><!--keep in sync with test containers -->
    <dwc-api.version>2.1.4</dwc-api.version>
    <dwca-io.version>3.0.0</dwca-io.version>
    <elasticsearch.version>8.1.3</elasticsearch.version>
    <fastutil.version>8.5.15</fastutil.version>
    <fury.version>0.10.1</fury.version>
    <gbif-api.version>2.1.3</gbif-api.version>
    <hikaricp.version>6.3.0</hikaricp.version>
    <icu4j.version>75.1</icu4j.version>
    <java-diff-utils.version>4.12</java-diff-utils.version>
    <javers.version>7.6.2</javers.version>
    <jbibtex.version>1.0.20</jbibtex.version>
    <jjwt.version>0.12.6</jjwt.version>
    <jsoup.version>1.19.1</jsoup.version>
    <junit.version>5.11.2</junit.version>
    <kryo.version>5.6.2</kryo.version>
    <kryo-reflectasm.version>1.11.9</kryo-reflectasm.version>
    <lombok.version>1.18.30</lombok.version>
    <mapdb.version>3.1.0</mapdb.version>
    <mockito.version>3.3.3</mockito.version>
    <mybatis.version>3.5.19</mybatis.version>
    <name-parser.version>3.14.0-SNAPSHOT</name-parser.version>
    <neo4j-algorithms.version>3.4.0.0</neo4j-algorithms.version>
    <neo4j.version>3.4.17</neo4j.version>
    <newick-io.version>1.0.6</newick-io.version>
    <poi.version>5.2.3</poi.version>
    <pollexor.version>3.0.0</pollexor.version>
    <postgresql.version>42.7.6</postgresql.version>
    <scribejava.version>8.3.1</scribejava.version>
    <simple-mail.version>8.12.5</simple-mail.version>
    <stax2.version>4.2.2</stax2.version>
    <testcontainers.version>1.20.2</testcontainers.version><!--keep in sync with docker client-->
    <text-tree.version>1.6.5</text-tree.version>
    <tika.version>2.9.2</tika.version>
    <twelvemonkeys.version>3.12.0</twelvemonkeys.version>
    <woodstox.version>6.6.2</woodstox.version>
    <imgscalr.version>4.2</imgscalr.version>
    <univocity-parsers.version>2.9.1</univocity-parsers.version>

    <!-- Maven plugin versions. Check for available updates: mvn versions:display-plugin-updates -->
    <depgraph-maven-plugin>4.0.3</depgraph-maven-plugin>
    <exec-maven-plugin.version>3.4.1</exec-maven-plugin.version>
    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.8.0</maven-dependency-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <maven-git-commit-id-plugin.version>4.9.10</maven-git-commit-id-plugin.version>
    <maven-graalvm-plugin.version>0.10.3</maven-graalvm-plugin.version>
    <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>
    <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version>

    <gbif.api>https://api.gbif.org/v1/</gbif.api>
    <gbif.appkey>col.plus</gbif.appkey>
    <gbif.secret>secret</gbif.secret>
    <img.repo>${project.build.directory}/img-repo</img.repo>
    <metrics.repo>${project.build.directory}/metrics-repo</metrics.repo>
    <!-- datacite settings for integration tests -->
    <datacite.username>col</datacite.username>
    <datacite.password>xyz</datacite.password>
    <datacite.prefix>10.80631</datacite.prefix>

    <!-- Sonar -->
    <sonar.language>java</sonar.language>
    <sonar.projectName>COL ChecklistBank API</sonar.projectName>
  </properties>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://raw.github.com/gbif/motherpom/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Catalogue of Life</name>
    <url>http://www.catalogueoflife.org/</url>
  </organization>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/CatalogueOfLife/backend/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>https://repository.gbif.org/repository/gbif</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>gbif-thirdparty</id>
      <url>https://repository.gbif.org/repository/thirdparty/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <modules>
    <module>api</module>
    <module>coldp</module>
    <module>core</module>
    <module>dao</module>
    <module>doi</module>
    <module>importer</module>
    <module>metadata</module>
    <module>matching-ws</module>
    <module>parser</module>
    <module>pgcopy</module>
    <module>reader</module>
    <module>reader-xls</module>
    <module>webservice</module>
  </modules>

  <distributionManagement>
    <repository>
      <id>gbif-release</id>
      <url>http://repository.gbif.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>gbif-deploy</id>
      <url>http://repository.gbif.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <!-- COL -->
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>importer</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>coldp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>metadata</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>api</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>reader</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>reader-xls</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>pgcopy</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>dao</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>dao</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>doi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>parser</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>newick-io</artifactId>
        <version>${newick-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>core</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.catalogueoflife</groupId>
        <artifactId>importer</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
        <scope>test</scope>
      </dependency>
      <!-- Dropwizard -->
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-core</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-auth</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-client</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-forms</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-jersey</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-util</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-lifecycle</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-logging</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-testing</artifactId>
        <version>${dropwizard.version}</version>
      </dependency>

      <!-- Dropwizard Bill of materials.
           There are 2 BOMs now: https://github.com/dropwizard/dropwizard/pull/2897
           One for the dropwizard modules, one for the transitive dependencies to external projects.
          Imports all versions just like Dropwizard uses.
          See properties section above for details!
      -->
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <!-- https://github.com/dropwizard/dropwizard/blob/v4.0.8/dropwizard-dependencies/pom.xml -->
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-dependencies</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Tvelve Monkeys image format extensions -->
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-jpeg</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-tiff</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-bmp</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-psd</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-pict</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-icns</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-webp</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>com.twelvemonkeys.imageio</groupId>
        <artifactId>imageio-batik</artifactId>
        <version>${twelvemonkeys.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>${batik.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- thumbor -->
      <dependency>
        <groupId>com.squareup</groupId>
        <artifactId>pollexor</artifactId>
        <version>${pollexor.version}</version>
      </dependency>

      <!-- JWT -->
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jjwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId>
        <version>${jjwt.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- GBIF -->
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>dwc-api</artifactId>
        <version>${dwc-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>gbif-api</artifactId>
        <version>${gbif-api.version}</version>
      </dependency>
      <dependency>
        <!-- lombok from the GBIF API is at 1.18.24 which does not work with JDK21 -->
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>name-parser-api</artifactId>
        <version>${name-parser.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>name-parser</artifactId>
        <version>${name-parser.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>dwca-io</artifactId>
        <version>${dwca-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gbif</groupId>
        <artifactId>text-tree</artifactId>
        <version>${text-tree.version}</version>
      </dependency>

      <!-- mybatis / DB -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikaricp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>

      <!-- neo4j -->
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j</artifactId>
        <version>${neo4j.version}</version>
        <exclusions>
          <exclusion>
            <!-- turn off usage reporting to normalizer -->
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-udc</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-kernel</artifactId>
        <version>${neo4j.version}</version>
      </dependency>
      <!-- somehow missing from neo4j-kernel deps on java 11: https://github.com/Sp2000/colplus-backend/issues/573 -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>1.64</version>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-cypher</artifactId>
        <version>${neo4j.version}</version>
        <exclusions>
          <exclusion>
            <!-- uses old ASM version and we dont use it anyways -->
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-codegen</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>neo4j-slf4j</artifactId>
        <version>${neo4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.neo4j</groupId>
        <artifactId>graph-algorithms-algo</artifactId>
        <version>${neo4j-algorithms.version}</version>
      </dependency>

      <!-- mapdb & kryo -->
      <dependency>
        <groupId>org.mapdb</groupId>
        <artifactId>mapdb</artifactId>
        <version>${mapdb.version}</version>
      </dependency>
      <dependency>
        <groupId>net.openhft</groupId>
        <artifactId>chronicle-bom</artifactId>
        <version>${chronicle.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- we use kryo to serialize data into binary which is > 10 times faster than jackson even with smile -->
      <dependency>
        <groupId>com.esotericsoftware</groupId>
        <artifactId>kryo</artifactId>
        <version>${kryo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.esotericsoftware</groupId>
        <artifactId>reflectasm</artifactId>
        <version>${kryo-reflectasm.version}</version>
        <type>bundle</type>
      </dependency>
      <dependency>
        <groupId>org.apache.fury</groupId>
        <artifactId>fury-core</artifactId>
        <version>${fury.version}</version>
      </dependency>

      <!-- docker -->
      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java</artifactId>
        <version>${docker-client.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java-transport-httpclient5</artifactId>
        <version>${docker-client.version}</version>
      </dependency>

      <!-- elastic -->
      <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>elasticsearch-rest-client</artifactId>
        <version>${elasticsearch.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch-core</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- unicode, transliterations
          Consider much simpler https://github.com/jirutka/unidecode
      -->
      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j</artifactId>
        <version>${icu4j.version}</version>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>co.elastic.logging</groupId>
        <artifactId>logback-ecs-encoder</artifactId>
        <version>1.6.0</version>
      </dependency>

      <!-- commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collections4.version}</version>
      </dependency>

      <!-- other -->
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
      <dependency>
        <groupId>org.simplejavamail</groupId>
        <artifactId>simple-java-mail</artifactId>
        <version>${simple-mail.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.java-diff-utils</groupId>
        <artifactId>java-diff-utils</artifactId>
        <version>${java-diff-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-core</artifactId>
        <version>${tika.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.imgscalr</groupId>
        <artifactId>imgscalr-lib</artifactId>
        <version>${imgscalr.version}</version>
      </dependency>
      <dependency>
        <groupId>com.univocity</groupId>
        <artifactId>univocity-parsers</artifactId>
        <version>${univocity-parsers.version}</version>
      </dependency>
      <dependency>
        <groupId>de.undercouch</groupId>
        <artifactId>citeproc-java</artifactId>
        <version>${citeproc.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jbibtex</groupId>
        <artifactId>jbibtex</artifactId>
        <version>${jbibtex.version}</version>
      </dependency>
      <!-- required by jbibtex -->
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>${antlr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.citationstyles</groupId>
        <artifactId>locales</artifactId>
        <version>${citeproc-styles.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.woodstox</groupId>
        <artifactId>woodstox-core</artifactId>
        <version>${woodstox.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.woodstox</groupId>
        <artifactId>stax2-api</artifactId>
        <version>${stax2.version}</version>
      </dependency>
      <dependency>
        <groupId>it.unimi.dsi</groupId>
        <artifactId>fastutil</artifactId>
        <version>${fastutil.version}</version>
      </dependency>
      <dependency>
        <groupId>org.javers</groupId>
        <artifactId>javers-core</artifactId>
        <version>${javers.version}</version>
      </dependency>

      <!-- TEST SCOPE -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>postgresql</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.ferstl</groupId>
          <artifactId>depgraph-maven-plugin</artifactId>
          <version>${depgraph-maven-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${maven-git-commit-id-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <release>${java.version}</release>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven-3</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[${minimumMavenVersion},)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[${java.version},)</version>
                  </requireJavaVersion>
                  <!--
                  <dependencyConvergence/>
                  -->
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
          <!-- TODO: https://medium.com/@Leejjon_net/migrate-a-jersey-based-micro-service-to-java-11-and-deploy-to-app-engine-7ba41a835992#ff49 -->
          <configuration>
            <mainClass>${mainClass}</mainClass>
            <arguments>
              <argument>server</argument>
              <argument>${project.build.outputDirectory}/config.yaml</argument>
            </arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>${mainClass}</mainClass>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                <resource>config.yaml</resource>
              </transformer>
            </transformers>
            <!-- exclude signed Manifests -->
            <filters>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addClasspath>true</addClasspath>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>attach-test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <!-- skips surefire tests without skipping failsafe tests.
              Property value seems to magically default to false -->
            <skipTests>${skip.surefire.tests}</skipTests>
            <!--
            Run tests in parallel with the same JVM by default for all modules.
            Some modules run tests that share static information and will override this configuration.
            See https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html
            -->
            <reuseForks>true</reuseForks>
            <!-- Creates half as many forks as there are CPU cores. -->
            <forkCount>0.5C</forkCount>
            <!-- run all of maven with the following to also build entire modules in parallel: mvn -T 0.5C test -->

            <useSystemClassLoader>false</useSystemClassLoader>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <!-- use default JVM settings <argLine>-Xmx256m</argLine> -->
            <runOrder>failedfirst</runOrder>

            <includes>
              <!-- include regular unit tests -->
              <include>**/*Test.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!--
            We have static information in tests se we cannot share the same JVM to run tests
            See https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html
            -->
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <!-- mem settings may not be necessary but the 3rd arg is. See here: -->
            <!-- https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
            <!-- And here: https://talk.openmrs.org/t/error-could-not-find-or-load-main-class-org-apache-maven-surefire-booter-forkedbooter/20509 -->
            <argLine>
              -Djdk.net.URLClassPath.disableClassPathURLCheck=true
            </argLine>
            <runOrder>random</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <goals>deploy</goals>
            <preparationGoals>install</preparationGoals>
            <resume>false</resume>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>col-release</releaseProfiles>
            <tagNameFormat>${project.artifactId}-@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.graalvm.buildtools</groupId>
          <artifactId>native-maven-plugin</artifactId>
          <version>${maven-graalvm-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
      </plugin>
      <!--
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
      </plugin>
      <!-- run integration tests (*IT) during verify -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!--
      shows module dependencies as dot and png file in target folder. Use with just
      mvn -P modgraph
      -->
      <id>modgraph</id>
      <build>
        <defaultGoal>depgraph:aggregate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.github.ferstl</groupId>
            <artifactId>depgraph-maven-plugin</artifactId>
            <configuration>
              <includes>org.catalogueoflife</includes>
              <showConflicts>true</showConflicts>
              <createImage>true</createImage>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
      shows all aggregated dependencies as dot and png file in target folder
      mvn -P graph
      -->
      <id>graph</id>
      <build>
        <defaultGoal>depgraph:aggregate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.github.ferstl</groupId>
            <artifactId>depgraph-maven-plugin</artifactId>
            <configuration>
              <showConflicts>true</showConflicts>
              <createImage>true</createImage>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
